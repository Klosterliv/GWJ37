[gd_resource type="VisualShader" load_steps=46 format=2]

[ext_resource path="res://Art/perlin1.png" type="Texture" id=1]
[ext_resource path="res://Art/fleshwall_normal.png" type="Texture" id=2]
[ext_resource path="res://Art/fleshwall_diffuse.png" type="Texture" id=3]
[ext_resource path="res://Art/noises_perlinstrips.png" type="Texture" id=4]

[sub_resource type="VisualShaderNodeVectorDecompose" id=1]

[sub_resource type="VisualShaderNodeInput" id=2]
output_port_for_preview = 0
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=4]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=5]

[sub_resource type="VisualShaderNodeVectorCompose" id=6]

[sub_resource type="VisualShaderNodeScalarOp" id=7]

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 0.0, 1, 0.01 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=9]

[sub_resource type="VisualShaderNodeScalarOp" id=10]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorCompose" id=11]

[sub_resource type="VisualShaderNodeInput" id=12]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=13]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=14]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=15]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=16]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=17]
input_name = "light_pass"

[sub_resource type="VisualShaderNodeScalarOp" id=18]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=19]

[sub_resource type="VisualShaderNodeScalarOp" id=20]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=21]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=22]

[sub_resource type="VisualShaderNodeScalarOp" id=23]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=24]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=25]
uniform_name = "warp_tiling"

[sub_resource type="VisualShaderNodeScalarUniform" id=26]
uniform_name = "tiling"

[sub_resource type="VisualShaderNodeScalarUniform" id=27]
uniform_name = "warp_str"

[sub_resource type="VisualShaderNodeScalarUniform" id=28]
uniform_name = "timescale"

[sub_resource type="VisualShaderNodeTexture" id=29]
texture = ExtResource( 3 )
texture_type = 1

[sub_resource type="VisualShaderNodeScalarUniform" id=30]
uniform_name = "HP"

[sub_resource type="VisualShaderNodeTexture" id=31]
output_port_for_preview = 0
texture = ExtResource( 4 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=32]

[sub_resource type="VisualShaderNodeScalarOp" id=33]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=34]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=35]
default_input_values = [ 0, 0.0, 1, 0.2 ]

[sub_resource type="VisualShaderNodeScalarFunc" id=36]
function = 15

[sub_resource type="VisualShaderNodeScalarClamp" id=37]

[sub_resource type="VisualShaderNodeScalarFunc" id=38]
output_port_for_preview = 0
function = 31

[sub_resource type="VisualShaderNodeVectorOp" id=39]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=40]
texture = ExtResource( 2 )
texture_type = 2

[sub_resource type="VisualShaderNodeColorUniform" id=41]
uniform_name = "Color"

[resource]
code = "shader_type canvas_item;
uniform vec4 Color : hint_color;
uniform float tiling;
uniform float warp_tiling;
uniform float timescale;
uniform sampler2D tex_frg_2;
uniform float warp_str;
uniform sampler2D tex_frg_5 : hint_albedo;
uniform sampler2D tex_frg_51;
uniform float HP;
uniform sampler2D tex_frg_6 : hint_normal;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:60
	vec3 n_out60p0 = Color.rgb;
	float n_out60p1 = Color.a;

// Input:19
	vec3 n_out19p0 = vec3(UV, 0.0);

// VectorDecompose:27
	float n_out27p0 = n_out19p0.x;
	float n_out27p1 = n_out19p0.y;
	float n_out27p2 = n_out19p0.z;

// ScalarUniform:47
	float n_out47p0 = tiling;

// ScalarOp:42
	float n_out42p0 = n_out27p0 * n_out47p0;

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorDecompose:22
	float n_out22p0 = n_out3p0.x;
	float n_out22p1 = n_out3p0.y;
	float n_out22p2 = n_out3p0.z;

// ScalarUniform:46
	float n_out46p0 = warp_tiling;

// ScalarOp:31
	float n_out31p0 = n_out22p0 * n_out46p0;

// Input:18
	float n_out18p0 = TIME;

// ScalarUniform:49
	float n_out49p0 = timescale;

// VectorOp:35
	vec3 n_out35p0 = vec3(n_out18p0) * vec3(n_out49p0);

// ScalarOp:24
	float n_out24p0 = n_out31p0 + dot(n_out35p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarOp:32
	float n_out32p0 = n_out22p1 * n_out46p0;

// VectorCompose:23
	float n_in23p2 = 0.00000;
	vec3 n_out23p0 = vec3(n_out24p0, n_out32p0, n_in23p2);

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out23p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// ScalarUniform:48
	float n_out48p0 = warp_str;

// ScalarOp:25
	float n_out25p0 = dot(n_out2p0, vec3(0.333333, 0.333333, 0.333333)) * n_out48p0;

// VectorDecompose:11
	float n_out11p0 = vec3(n_out25p0).x;
	float n_out11p1 = vec3(n_out25p0).y;
	float n_out11p2 = vec3(n_out25p0).z;

// ScalarOp:28
	float n_out28p0 = n_out42p0 + n_out11p0;

// ScalarOp:43
	float n_out43p0 = n_out27p1 * n_out47p0;

// ScalarOp:30
	float n_out30p0 = n_out43p0 + n_out11p1;

// VectorCompose:29
	float n_in29p2 = 0.00000;
	vec3 n_out29p0 = vec3(n_out28p0, n_out30p0, n_in29p2);

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, n_out29p0.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// VectorDecompose:38
	float n_out38p0 = n_out5p0.x;
	float n_out38p1 = n_out5p0.y;
	float n_out38p2 = n_out5p0.z;

// Input:36
	float n_out36p0 = float(AT_LIGHT_PASS ? 1.0 : 0.0);

// ScalarOp:39
	float n_out39p0 = n_out38p0 * n_out36p0;

// ScalarOp:40
	float n_out40p0 = n_out38p1 * n_out36p0;

// ScalarOp:37
	float n_out37p0 = n_out38p2 * dot(n_out5p0, vec3(0.333333, 0.333333, 0.333333));

// VectorCompose:41
	vec3 n_out41p0 = vec3(n_out39p0, n_out40p0, n_out37p0);

// VectorOp:59
	vec3 n_out59p0 = n_out60p0 * n_out41p0;

// Texture:51
	vec4 tex_frg_51_read = texture(tex_frg_51, n_out29p0.xy);
	vec3 n_out51p0 = tex_frg_51_read.rgb;
	float n_out51p1 = tex_frg_51_read.a;

// VectorDecompose:52
	float n_out52p0 = n_out51p0.x;
	float n_out52p1 = n_out51p0.y;
	float n_out52p2 = n_out51p0.z;

// ScalarFunc:58
	float n_out58p0 = 1.0 - n_out52p0;

// ScalarOp:53
	float n_in53p1 = 2.00000;
	float n_out53p0 = n_out58p0 * n_in53p1;

// ScalarUniform:50
	float n_out50p0 = HP;

// ScalarOp:54
	float n_out54p0 = n_out53p0 * n_out50p0;

// ScalarOp:55
	float n_in55p1 = 0.20000;
	float n_out55p0 = n_out54p0 + n_in55p1;

// ScalarFunc:56
	float n_out56p0 = round(n_out55p0);

// ScalarClamp:57
	float n_in57p1 = 0.00000;
	float n_in57p2 = 1.00000;
	float n_out57p0 = clamp(n_out56p0, n_in57p1, n_in57p2);

// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, n_out29p0.xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// Output:0
	COLOR.rgb = n_out59p0;
	COLOR.a = n_out57p0;
	NORMAL = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 1325.28, -704.5 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 2420, -440 )
nodes/fragment/2/node = SubResource( 4 )
nodes/fragment/2/position = Vector2( -1080, -380 )
nodes/fragment/3/node = SubResource( 12 )
nodes/fragment/3/position = Vector2( -2460, -340 )
nodes/fragment/5/node = SubResource( 29 )
nodes/fragment/5/position = Vector2( 880, -440 )
nodes/fragment/6/node = SubResource( 40 )
nodes/fragment/6/position = Vector2( 880, -200 )
nodes/fragment/11/node = SubResource( 1 )
nodes/fragment/11/position = Vector2( -400, -240 )
nodes/fragment/18/node = SubResource( 2 )
nodes/fragment/18/position = Vector2( -2080, -140 )
nodes/fragment/19/node = SubResource( 3 )
nodes/fragment/19/position = Vector2( -1000, -500 )
nodes/fragment/22/node = SubResource( 5 )
nodes/fragment/22/position = Vector2( -2240, -400 )
nodes/fragment/23/node = SubResource( 6 )
nodes/fragment/23/position = Vector2( -1500, -360 )
nodes/fragment/24/node = SubResource( 7 )
nodes/fragment/24/position = Vector2( -1700, -420 )
nodes/fragment/25/node = SubResource( 8 )
nodes/fragment/25/position = Vector2( -720, -240 )
nodes/fragment/27/node = SubResource( 9 )
nodes/fragment/27/position = Vector2( -720, -520 )
nodes/fragment/28/node = SubResource( 10 )
nodes/fragment/28/position = Vector2( 160, -560 )
nodes/fragment/29/node = SubResource( 11 )
nodes/fragment/29/position = Vector2( 440, -480 )
nodes/fragment/30/node = SubResource( 13 )
nodes/fragment/30/position = Vector2( 167, -326.25 )
nodes/fragment/31/node = SubResource( 14 )
nodes/fragment/31/position = Vector2( -1980, -440 )
nodes/fragment/32/node = SubResource( 15 )
nodes/fragment/32/position = Vector2( -1980, -280 )
nodes/fragment/35/node = SubResource( 16 )
nodes/fragment/35/position = Vector2( -1740, -160 )
nodes/fragment/36/node = SubResource( 17 )
nodes/fragment/36/position = Vector2( 1120, -220 )
nodes/fragment/37/node = SubResource( 18 )
nodes/fragment/37/position = Vector2( 1520, -400 )
nodes/fragment/38/node = SubResource( 19 )
nodes/fragment/38/position = Vector2( 1220, -560 )
nodes/fragment/39/node = SubResource( 20 )
nodes/fragment/39/position = Vector2( 1520, -700 )
nodes/fragment/40/node = SubResource( 21 )
nodes/fragment/40/position = Vector2( 1520, -540 )
nodes/fragment/41/node = SubResource( 22 )
nodes/fragment/41/position = Vector2( 1808, -513.25 )
nodes/fragment/42/node = SubResource( 23 )
nodes/fragment/42/position = Vector2( -320, -560 )
nodes/fragment/43/node = SubResource( 24 )
nodes/fragment/43/position = Vector2( -320, -440 )
nodes/fragment/46/node = SubResource( 25 )
nodes/fragment/46/position = Vector2( -2240, -260 )
nodes/fragment/47/node = SubResource( 26 )
nodes/fragment/47/position = Vector2( -700, -380 )
nodes/fragment/48/node = SubResource( 27 )
nodes/fragment/48/position = Vector2( -840, -100 )
nodes/fragment/49/node = SubResource( 28 )
nodes/fragment/49/position = Vector2( -1920, 40 )
nodes/fragment/50/node = SubResource( 30 )
nodes/fragment/50/position = Vector2( 300, 400 )
nodes/fragment/51/node = SubResource( 31 )
nodes/fragment/51/position = Vector2( 100, 60 )
nodes/fragment/52/node = SubResource( 32 )
nodes/fragment/52/position = Vector2( 280, 100 )
nodes/fragment/53/node = SubResource( 33 )
nodes/fragment/53/position = Vector2( 700, 220 )
nodes/fragment/54/node = SubResource( 34 )
nodes/fragment/54/position = Vector2( 920, 280 )
nodes/fragment/55/node = SubResource( 35 )
nodes/fragment/55/position = Vector2( 1100, 240 )
nodes/fragment/56/node = SubResource( 36 )
nodes/fragment/56/position = Vector2( 1370.28, 219 )
nodes/fragment/57/node = SubResource( 37 )
nodes/fragment/57/position = Vector2( 1640, 200 )
nodes/fragment/58/node = SubResource( 38 )
nodes/fragment/58/position = Vector2( 480, 120 )
nodes/fragment/59/node = SubResource( 39 )
nodes/fragment/59/position = Vector2( 2120, -580 )
nodes/fragment/60/node = SubResource( 41 )
nodes/fragment/60/position = Vector2( 1880, -700 )
nodes/fragment/connections = PoolIntArray( 23, 0, 2, 0, 2, 0, 25, 0, 25, 0, 11, 0, 19, 0, 27, 0, 28, 0, 29, 0, 29, 0, 5, 0, 30, 0, 29, 1, 11, 0, 28, 1, 11, 1, 30, 1, 24, 0, 23, 0, 3, 0, 22, 0, 22, 0, 31, 0, 22, 1, 32, 0, 32, 0, 23, 1, 31, 0, 24, 0, 18, 0, 35, 0, 35, 0, 24, 1, 6, 0, 0, 2, 29, 0, 6, 0, 5, 0, 37, 1, 5, 0, 38, 0, 36, 0, 40, 1, 36, 0, 39, 1, 38, 0, 39, 0, 38, 1, 40, 0, 38, 2, 37, 0, 39, 0, 41, 0, 40, 0, 41, 1, 37, 0, 41, 2, 27, 0, 42, 0, 42, 0, 28, 0, 27, 1, 43, 0, 43, 0, 30, 0, 47, 0, 42, 1, 47, 0, 43, 1, 48, 0, 25, 1, 46, 0, 32, 1, 46, 0, 31, 1, 49, 0, 35, 1, 29, 0, 51, 0, 50, 0, 54, 1, 53, 0, 54, 0, 54, 0, 55, 0, 55, 0, 56, 0, 56, 0, 57, 0, 51, 0, 52, 0, 52, 0, 58, 0, 58, 0, 53, 0, 57, 0, 0, 1, 41, 0, 59, 1, 59, 0, 0, 0, 60, 0, 59, 0 )
