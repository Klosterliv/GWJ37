[gd_resource type="VisualShader" load_steps=19 format=2]

[ext_resource path="res://Art/perlin1.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarFunc" id=1]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=3]
default_input_values = [ 0, 0.0, 1, 0.2 ]

[sub_resource type="VisualShaderNodeScalarOp" id=4]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarClamp" id=6]

[sub_resource type="VisualShaderNodeColorUniform" id=7]
uniform_name = "Color"

[sub_resource type="VisualShaderNodeScalarUniform" id=8]
uniform_name = "cooldown"

[sub_resource type="VisualShaderNodeVectorOp" id=9]
operator = 1

[sub_resource type="VisualShaderNodeColorConstant" id=10]
constant = Color( 0.135534, 0.51147, 1, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=11]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=12]
uniform_name = "HP"

[sub_resource type="VisualShaderNodeTextureUniform" id=13]
uniform_name = "Sprite"

[sub_resource type="VisualShaderNodeVectorOp" id=14]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=15]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=16]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=17]

[resource]
code = "shader_type canvas_item;
uniform vec4 Color : hint_color;
uniform sampler2D Sprite;
uniform float cooldown;
uniform float HP;
uniform sampler2D tex_frg_7;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:2
	vec3 n_out2p0 = Color.rgb;
	float n_out2p1 = Color.a;

// Input:17
	vec3 n_out17p0 = vec3(UV, 0.0);

// TextureUniform:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 n_tex_read = texture(Sprite, n_out17p0.xy);
		n_out4p0 = n_tex_read.rgb;
		n_out4p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out2p0 * n_out4p0;

// Color:28
	vec3 n_out28p0 = vec3(0.135534, 0.511470, 1.000000);
	float n_out28p1 = 1.000000;

// ScalarUniform:20
	float n_out20p0 = cooldown;

// VectorOp:29
	vec3 n_out29p0 = n_out28p0 * vec3(n_out20p0);

// VectorOp:27
	vec3 n_out27p0 = n_out5p0 - n_out29p0;

// ScalarUniform:3
	float n_out3p0 = HP;

// Texture:7
	vec4 tex_frg_7_read = texture(tex_frg_7, UV.xy);
	vec3 n_out7p0 = tex_frg_7_read.rgb;
	float n_out7p1 = tex_frg_7_read.a;

// VectorDecompose:9
	float n_out9p0 = n_out7p0.x;
	float n_out9p1 = n_out7p0.y;
	float n_out9p2 = n_out7p0.z;

// ScalarOp:13
	float n_in13p1 = 2.00000;
	float n_out13p0 = n_out9p0 * n_in13p1;

// ScalarOp:8
	float n_out8p0 = n_out3p0 * n_out13p0;

// ScalarOp:15
	float n_in15p1 = 0.20000;
	float n_out15p0 = n_out8p0 + n_in15p1;

// ScalarFunc:11
	float n_out11p0 = round(n_out15p0);

// ScalarClamp:19
	float n_in19p1 = 0.00000;
	float n_in19p2 = 1.00000;
	float n_out19p0 = clamp(n_out11p0, n_in19p1, n_in19p2);

// ScalarOp:16
	float n_out16p0 = n_out4p1 * n_out19p0;

// Output:0
	COLOR.rgb = n_out27p0;
	COLOR.a = n_out16p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -695.725, -44 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1140, 40 )
nodes/fragment/2/node = SubResource( 7 )
nodes/fragment/2/position = Vector2( -280, -100 )
nodes/fragment/3/node = SubResource( 12 )
nodes/fragment/3/position = Vector2( -1260, 340 )
nodes/fragment/4/node = SubResource( 13 )
nodes/fragment/4/position = Vector2( -860, 40 )
nodes/fragment/5/node = SubResource( 14 )
nodes/fragment/5/position = Vector2( 80, -100 )
nodes/fragment/7/node = SubResource( 15 )
nodes/fragment/7/position = Vector2( -1700, 300 )
nodes/fragment/8/node = SubResource( 16 )
nodes/fragment/8/position = Vector2( -800, 320 )
nodes/fragment/9/node = SubResource( 17 )
nodes/fragment/9/position = Vector2( -1460, 420 )
nodes/fragment/11/node = SubResource( 1 )
nodes/fragment/11/position = Vector2( -380, 400 )
nodes/fragment/13/node = SubResource( 2 )
nodes/fragment/13/position = Vector2( -1240, 420 )
nodes/fragment/15/node = SubResource( 3 )
nodes/fragment/15/position = Vector2( -580, 380 )
nodes/fragment/16/node = SubResource( 4 )
nodes/fragment/16/position = Vector2( 60, 260 )
nodes/fragment/17/node = SubResource( 5 )
nodes/fragment/17/position = Vector2( -1180, -20 )
nodes/fragment/19/node = SubResource( 6 )
nodes/fragment/19/position = Vector2( -160, 420 )
nodes/fragment/20/node = SubResource( 8 )
nodes/fragment/20/position = Vector2( 120, 140 )
nodes/fragment/27/node = SubResource( 9 )
nodes/fragment/27/position = Vector2( 520, -140 )
nodes/fragment/28/node = SubResource( 10 )
nodes/fragment/28/position = Vector2( 120, 40 )
nodes/fragment/29/node = SubResource( 11 )
nodes/fragment/29/position = Vector2( 340, 20 )
nodes/fragment/connections = PoolIntArray( 2, 0, 5, 0, 4, 0, 5, 1, 7, 0, 9, 0, 9, 0, 13, 0, 13, 0, 8, 1, 8, 0, 15, 0, 15, 0, 11, 0, 3, 0, 8, 0, 4, 1, 16, 0, 16, 0, 0, 1, 17, 0, 4, 0, 11, 0, 19, 0, 19, 0, 16, 1, 5, 0, 27, 0, 27, 0, 0, 0, 28, 0, 29, 0, 20, 0, 29, 1, 29, 0, 27, 1 )
