[gd_resource type="VisualShader" load_steps=20 format=2]

[ext_resource path="res://Art/perlin1.png" type="Texture" id=1]
[ext_resource path="res://Art/flesh_diffuse.png" type="Texture" id=2]
[ext_resource path="res://Art/flesh_normal.png" type="Texture" id=3]

[sub_resource type="VisualShaderNodeScalarConstant" id=8]
constant = 0.01

[sub_resource type="VisualShaderNodeVectorDecompose" id=9]

[sub_resource type="VisualShaderNodeVectorCompose" id=10]

[sub_resource type="VisualShaderNodeVectorOp" id=11]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=12]
constant = 10.319

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "screen_pixel_size"

[sub_resource type="VisualShaderNodeScalarOp" id=14]
operator = 3

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "point_coord"

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeInput" id=3]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=4]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=5]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeScalarOp" id=6]

[sub_resource type="VisualShaderNodeColorConstant" id=7]
constant = Color( 0.28064, 0, 0.472656, 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=16]
operator = 2

[resource]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_5;
uniform sampler2D tex_frg_2;
uniform sampler2D tex_frg_6;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(SCREEN_UV, 0.0);

// Scalar:14
	float n_out14p0 = 10.319000;

// VectorOp:13
	vec3 n_out13p0 = n_out3p0 * vec3(n_out14p0);

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, n_out13p0.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out13p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// VectorDecompose:11
	float n_out11p0 = n_out2p0.x;
	float n_out11p1 = n_out2p0.y;
	float n_out11p2 = n_out2p0.z;

// VectorCompose:12
	float n_in12p2 = 0.00000;
	vec3 n_out12p0 = vec3(n_out11p0, n_out11p1, n_in12p2);

// ScalarOp:7
	float n_out7p0 = dot(n_out4p0, vec3(0.333333, 0.333333, 0.333333)) + dot(n_out12p0, vec3(0.333333, 0.333333, 0.333333));

// Scalar:10
	float n_out10p0 = 0.010000;

// ScalarOp:9
	float n_out9p0 = n_out7p0 * n_out10p0;

// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, vec3(n_out9p0).xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// Output:0
	COLOR.rgb = n_out5p0;
	NORMAL = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1659.58, -199.25 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 40, -40 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -1000, -80 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -1660, -120 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -700, 180 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( -300, -40 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 0, 400 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( -480, 240 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( 220, 140 )
nodes/fragment/9/node = SubResource( 16 )
nodes/fragment/9/position = Vector2( -260, 360 )
nodes/fragment/10/node = SubResource( 8 )
nodes/fragment/10/position = Vector2( -500, 480 )
nodes/fragment/11/node = SubResource( 9 )
nodes/fragment/11/position = Vector2( -980, 240 )
nodes/fragment/12/node = SubResource( 10 )
nodes/fragment/12/position = Vector2( -720, 380 )
nodes/fragment/13/node = SubResource( 11 )
nodes/fragment/13/position = Vector2( -1220, 20 )
nodes/fragment/14/node = SubResource( 12 )
nodes/fragment/14/position = Vector2( -1440, 320 )
nodes/fragment/15/node = SubResource( 13 )
nodes/fragment/15/position = Vector2( -1720, -20 )
nodes/fragment/16/node = SubResource( 14 )
nodes/fragment/16/position = Vector2( -1340, -140 )
nodes/fragment/17/node = SubResource( 15 )
nodes/fragment/17/position = Vector2( -1640, 100 )
nodes/fragment/connections = PoolIntArray( 6, 0, 0, 2, 4, 0, 7, 0, 7, 0, 9, 0, 9, 0, 6, 0, 10, 0, 9, 1, 2, 0, 11, 0, 11, 0, 12, 0, 11, 1, 12, 1, 12, 0, 7, 1, 13, 0, 2, 0, 14, 0, 13, 1, 5, 0, 0, 0, 13, 0, 5, 0, 3, 0, 16, 0, 15, 0, 16, 1, 3, 0, 13, 0 )
